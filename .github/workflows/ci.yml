# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "github" branch
  push:
    branches: [ '*' ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: sudo apt update && sudo apt -y install build-essential valgrind clang clang cmake libboost-tools-dev libpthread-stubs0-dev libssl-dev clang-15 clang python3 python3-pytest python3-pytest-xdist python3-pip && pip3 install pytest

      - name: Build and test
        run: |
            mkdir build && cd build && cmake -DCMAKE_BUILD_TYPE=Release -DMLCA_NO_VALGRIND=ON .. && make && ctest
            test/mlca_test Dilithium2 speed 50
            test/mlca_test Dilithium3 speed 50
            test/mlca_test Dilithium5 speed 50

      - name: ACVP tests
        run: python3 -m pytest test/test_acvp.py -v

      - name: Build and Clang sanitizers
        run: |
            ldd --version
            mkdir -p build && cd build
            rm -rf * && cmake -DCMAKE_C_COMPILER=clang -DCMAKE_BUILD_TYPE=asan .. && make && ctest -j4
            rm -rf * && cmake -DCMAKE_C_COMPILER=clang -DCMAKE_BUILD_TYPE=lsan .. && make && ctest -j4
            rm -rf * && cmake -DCMAKE_C_COMPILER=clang -DCMAKE_BUILD_TYPE=msan .. && make && ctest -j4
            rm -rf * && cmake -DCMAKE_C_COMPILER=clang -DCMAKE_BUILD_TYPE=ubsan .. && make && ctest -j4
    
      - name: Build and OQS Interop Test
        run: |
            rm -rf build && mkdir build && cd build && cmake -DMLCA_OQS_INTEROP_TEST=ON .. && make && ctest -j4
